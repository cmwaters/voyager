(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{363:function(e,t,a){"use strict";a.r(t);var o=a(44),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guide"}},[e._v("#")]),e._v(" Guide")]),e._v(" "),a("p",[e._v("This section provides a simple walkthough designed to display some of the "),a("RouterLink",{attrs:{to:"/docs/features.html"}},[e._v("features")]),e._v(" that are part of the Voyager DAO. Before we get started, you will need to install the "),a("a",{attrs:{href:"https://docs.near.org/docs/tools/near-cli#installation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Near CLI"),a("OutboundLink")],1),e._v(". Then clone the "),a("a",{attrs:{href:"https://github.com/cmwaters/voyager",target:"_blank",rel:"noopener noreferrer"}},[e._v("repository"),a("OutboundLink")],1),e._v(" and "),a("code",[e._v("cd")]),e._v(" into the directory.")],1),e._v(" "),a("ol",[a("li",[e._v("Login to your account. If you haven't set up one you can create a "),a("a",{attrs:{href:"https://wallet.testnet.near.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("testnet account"),a("OutboundLink")],1),e._v(". For this guide you may want to create a couple if you want to experiment with adding and removing members.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("near login\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Deploy and initialize the voyager factory. We are going to use "),a("code",[e._v("CONTRACT_ID")]),e._v(" to represent the account holder. You can set this up, for example, by running "),a("code",[e._v("CONTRACT_ID=voyager.testnet")]),e._v(".")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("near deploy $CONTRACT_ID --wasmFile=factory/res/voyager_factory.wasm\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("near call $CONTRACT_ID new --accountId $CONTRACT_ID\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Create a DAO. Let's first define the council as consisting only of the "),a("code",[e._v("CONTRACT_ID")]),e._v(" account.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ARGS=`echo \'{"config": {"name": "genesis", "symbol": "GENESIS", "decimals": 24, "purpose": "test", "bond": "1000000000000000000000000", "metadata": ""}, "policy": \'["$CONTRACT_ID"]\'}\' | base64`\n')])])]),a("p",[e._v("Now use the factory to initiate the dao")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('near call $CONTRACT_ID create "{\\"name\\": \\"genesis\\", \\"args\\": \\"$ARGS\\"}"  --accountId $CONTRACT_ID --amount 5 --gas 150000000000000\n')])])]),a("p",[e._v("The commands should return "),a("code",[e._v("true")]),e._v(" at the bottom if it passed. You can further validate it by running "),a("code",[e._v("near view genesis.$CONTRACT_ID get_policy")]),e._v(" or to check all the DAO's the factory has built "),a("code",[e._v("near view $CONTRACT_ID get_dao_list")]),e._v(".")]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("Create a proposal. First lets name our dao "),a("code",[e._v("DAO=genesis.$CONTRACT_ID")]),e._v(". This proposal looks to add a new member to the council.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('near call $DAO propose \'{"description": "test", "submission_time":"120000000000", "instructions": [{"AddMemberToRole": {"member_id": "another-account.testnet", "role": "council"}}]}\' --accountId another-account.testnet --amount 1\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);